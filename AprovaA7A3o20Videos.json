{"files":[{"id":"bdf41c00-086d-43d9-8ab0-df63328dcc58","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Sao_Paulo\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [\n      {\n        \"userSymbol\": \"Drive\",\n        \"version\": \"v3\",\n        \"serviceId\": \"drive\"\n      }\n    ]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"118786a0-3c9b-42f8-bd79-9040379c3213","name":"Teste_forcarAlteracaoInterna","type":"server_js","source":"function forcarAlteracaoInterna() {\n  const planilha \u003d SpreadsheetApp.openById(PLANILHA_ID).getSheetByName(NOME_ABA);\n  const dados \u003d planilha.getDataRange().getValues();\n\n  if (dados.length \u003c\u003d 1) {\n    Logger.log(\"Nenhuma aprova√ß√£o para for√ßar altera√ß√£o.\");\n    return;\n  }\n\n  const linhaUltimoRegistro \u003d dados.length - 1;\n  const [pollId, mensagemLinkId, , cliente, nomeVideo, dataCriacao, status] \u003d dados[linhaUltimoRegistro];\n\n  if (status \u003d\u003d\u003d \"pendente\") {\n    editarMensagemTelegram(mensagemLinkId, `‚úèÔ∏è Ajustes necess√°rios.`);\n    planilha.getRange(linhaUltimoRegistro + 1, 7).setValue(\"ajustes\");\n    planilha.getRange(linhaUltimoRegistro + 1, 6).setValue(\"finalizado\");\n\n    Logger.log(`Fluxo for√ßado: ${cliente} - ${nomeVideo} marcado como ajustes.`);\n  } else {\n    Logger.log(\"√öltimo item n√£o est√° mais pendente.\");\n  }\n}\n"},{"id":"ab42ed7d-6c59-48ef-9aa6-5bdc62a2720c","name":"Teste_forcarAprovacaoInterna","type":"server_js","source":"function forcarAprovacaoInterna() {\n  const planilha \u003d SpreadsheetApp.openById(PLANILHA_ID).getSheetByName(NOME_ABA);\n  const dados \u003d planilha.getDataRange().getValues();\n\n  if (dados.length \u003c\u003d 1) {\n    Logger.log(\"Nenhuma aprova√ß√£o para for√ßar.\");\n    return;\n  }\n\n  const linhaUltimoRegistro \u003d dados.length - 1;\n  const [pollId, mensagemLinkId, , cliente, nomeVideo, dataCriacao, status, , , tipoArquivo] \u003d dados[linhaUltimoRegistro];\n\n  if (status \u003d\u003d\u003d \"pendente\") {\n    editarMensagemTelegram(mensagemLinkId, `‚úÖ Aprovado para envio ao cliente.`);\n    planilha.getRange(linhaUltimoRegistro + 1, 7).setValue(\"aprovado\");\n    planilha.getRange(linhaUltimoRegistro + 1, 6).setValue(\"finalizado\");\n\n    if (tipoArquivo \u003d\u003d\u003d \"aprovacao\") {\n      enviarMensagemParaCliente(cliente, nomeVideo, mensagemLinkId);\n    }\n\n    Logger.log(`Fluxo for√ßado: ${cliente} - ${nomeVideo} aprovado.`);\n  } else {\n    Logger.log(\"√öltimo item n√£o est√° mais pendente.\");\n  }\n}\n"},{"id":"aba07f56-8981-4357-b316-b10faa5b148f","name":"Teste_simularNovoArquivo","type":"server_js","source":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// FUN√á√ïES AUXILIARES\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\nfunction getFilePath(folderId) {\n  // Se for uma simula√ß√£o, usa o caminho salvo nas propriedades\n  const caminhoSimulado \u003d PropertiesService.getScriptProperties().getProperty(folderId);\n  if (caminhoSimulado) {\n    return caminhoSimulado;\n  }\n\n  let path \u003d [];\n  try {\n    let folder \u003d DriveApp.getFolderById(folderId);\n    while (folder) {\n      path.unshift(folder.getName());\n      const parents \u003d folder.getParents();\n      if (parents.hasNext()) {\n        folder \u003d parents.next();\n      } else {\n        break;\n      }\n    }\n  } catch (e) {\n    Logger.log(\"Erro ao obter caminho: \" + e.message);\n  }\n  return \"Meu Drive\\\\\" + path.join(\"\\\\\");\n}\n\nfunction extractClienteNome(filePath) {\n  const partes \u003d filePath.split(\"\\\\\");\n  const idx \u003d partes.indexOf(\"01. CLIENTES\");\n  if (idx !\u003d\u003d -1 \u0026\u0026 partes.length \u003e idx + 1) {\n    return partes[idx + 1];\n  }\n  return \"Desconhecido\";\n}\n\nfunction extractTipoConteudo(filePath) {\n  const partes \u003d filePath.split(\"\\\\\");\n  const idx \u003d partes.indexOf(\"01. CLIENTES\");\n  if (idx !\u003d\u003d -1 \u0026\u0026 partes.length \u003e idx + 2) {\n    if (partes[idx + 2].includes(\"TR√ÅFEGO\")) return \"TR√ÅFEGO\";\n    if (partes[idx + 2].includes(\"ORG√ÇNICO\")) return \"ORG√ÇNICO\";\n    return \"Outro\";\n  }\n  return \"N√£o identificado\";\n}\n\nfunction identificarEditor(cliente) {\n  const editores \u003d {\n    \"Carnes Araguaia\": \"Davi\",\n    \"Bliss Motel\": \"Davi\",\n    \"Grow\": \"Cau√£\",\n    \"√ìticas Carol\": \"Cau√£\",\n    \"Fabrika\": \"Guilherme\",\n    \"Farmacia Meraki\": \"Guilherme\"\n    // Voc√™ pode adicionar mais clientes aqui!\n  };\n\n  return editores[cliente] || \"N√£o definido\";\n}\n\nfunction determinarTipoArquivo(nomeArquivo) {\n  const regexVersao \u003d /v\\d+$/i; // Detecta v1, v2, v3, ..., v15\n  const contemAPR \u003d nomeArquivo.includes(\u0027[APR]\u0027);\n\n  if (contemAPR \u0026\u0026 regexVersao.test(nomeArquivo)) {\n    return \"alteracao\";\n  } else if (contemAPR) {\n    return \"aprovacao\";\n  } else {\n    return \"ignorar\";\n  }\n}\n"},{"id":"5d29bc27-266d-4ce6-81a5-65499b283312","name":"Teste_simularNovoArquivoParaAlteracao","type":"server_js","source":"function simularNovoArquivoParaTesteAlteracao() {\n  const clientes \u003d [\n    \"Carnes Araguaia\",\n    \"Bliss Motel\",\n    \"Grow\",\n    \"√ìticas Carol\",\n    \"Fabrika\",\n    \"Farmacia Meraki\"\n  ];\n\n  const clienteAleatorio \u003d clientes[Math.floor(Math.random() * clientes.length)];\n  const caminhoFake \u003d \"Meu Drive\\\\01. CLIENTES\\\\\" + clienteAleatorio + \"\\\\01. TR√ÅFEGO\\\\2025\\\\04.ABR\";\n\n  const arquivoFake \u003d {\n    getName: () \u003d\u003e \u0027[APR] Teste de Aprova√ß√£o v2.mp4\u0027, // Agora simulando vers√£o\n    getUrl: () \u003d\u003e \u0027https://drive.google.com/file/d/TESTE_ID/view\u0027,\n    getParents: () \u003d\u003e ({\n      next: () \u003d\u003e ({\n        getId: () \u003d\u003e \u0027SIMULADO_\u0027 + Math.random().toString(36).substring(2, 15)\n      })\n    }),\n    getDateCreated: () \u003d\u003e new Date(),\n    getLastUpdated: () \u003d\u003e new Date()\n  };\n\n  // Criar dinamicamente o caminho falso\n  PropertiesService.getScriptProperties().setProperty(arquivoFake.getParents().next().getId(), caminhoFake);\n\n  iniciarFluxoAprovacao(arquivoFake, \"alteracao\");\n}\n"},{"id":"1558bf8f-eaee-4d4f-9459-d87dcc23c647","name":"config","type":"server_js","source":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// CONFIGURA√á√ïES PRINCIPAIS\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nconst TELEGRAM_TOKEN \u003d \u00277857235070:AAG4s0RU02_uiG2kbl_jMsQE_TLqUXYrgqY\u0027;\nconst TELEGRAM_CHAT_ID \u003d \u0027-1002612569510\u0027;\n\nconst THREAD_ID_APROVACAO_INTERNA \u003d 2;\nconst THREAD_ID_APROVACAO_CLIENTE \u003d 27;\n\nconst PLANILHA_ID \u003d \u00271jL2CiWH466QADpWU2iA6SpC5iGuy957GA90f5I1GpGw\u0027;\nconst NOME_ABA \u003d \u0027Controle Aprova√ß√£o\u0027;\n\n// Configura√ß√µes de lembretes\nconst INTERVALO_LEMBRETE_HORAS \u003d 3;\nconst HORARIO_INICIO \u003d 8.5;  // 8h30\nconst HORARIO_FIM \u003d 18;      // 18h00\n"},{"id":"a343942c-0c9e-4a57-8ca9-aba28cf51453","name":"main","type":"server_js","source":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// FLUXO PRINCIPAL DE APROVA√á√ÉO\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunction monitorarNovosArquivosDrive() {\n  const agora \u003d new Date();\n  const cincoMinAtras \u003d new Date(agora.getTime() - 5 * 60 * 1000);\n\n\n  while (arquivos.hasNext()) {\n    const arquivo \u003d arquivos.next();\n    const dataCriacao \u003d arquivo.getDateCreated();\n    const dataModificacao \u003d arquivo.getLastUpdated();\n\n    if (dataCriacao \u003e\u003d cincoMinAtras || dataModificacao \u003e\u003d cincoMinAtras) {\n      const nome \u003d arquivo.getName();\n      const tipoArquivo \u003d determinarTipoArquivo(nome);\n\n      if (tipoArquivo \u003d\u003d\u003d \"ignorar\") return;\n\n      iniciarFluxoAprovacao(arquivo, tipoArquivo);\n    }\n  }\n}\n\nfunction iniciarFluxoAprovacao(arquivo, tipoArquivo) {\n  const nome \u003d arquivo.getName();\n  const link \u003d arquivo.getUrl();\n  const caminho \u003d getFilePath(arquivo.getParents().next().getId());\n  const cliente \u003d extractClienteNome(caminho);\n  const tipo \u003d extractTipoConteudo(caminho);\n  const editor \u003d identificarEditor(cliente);\n  const dataFormatada \u003d Utilities.formatDate(arquivo.getLastUpdated(), Session.getScriptTimeZone(), \"dd/MM/yyyy HH:mm\");\n\n  const divisor \u003d \"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\";\n  enviarMensagemTelegram(divisor, THREAD_ID_APROVACAO_INTERNA);\n\n  const icone \u003d tipoArquivo \u003d\u003d\u003d \"aprovacao\" ? \"‚úÖ\" : \"‚úèÔ∏è\";\n  const titulo \u003d tipoArquivo \u003d\u003d\u003d \"aprovacao\" ? \"Aprova√ß√£o\" : \"Altera√ß√£o\";\n\n  const texto \u003d `${icone} \u003cb\u003e${titulo}\u003c/b\u003e\\n\\n` +\n                `\u003cb\u003e${cliente}\u003c/b\u003e | \u003cb\u003e${nome}\u003c/b\u003e\\n\\n` +\n                `üìÖ \u003cb\u003eModificado em:\u003c/b\u003e ${dataFormatada}\\n\\n` +\n                `üé¨ \u003cb\u003eEditor:\u003c/b\u003e ${editor}\\n\\n` +\n                `üóÇÔ∏è \u003cb\u003eTipo:\u003c/b\u003e ${tipo}\\n\\n` +\n                `üìÅ \u003cb\u003eCaminho:\u003c/b\u003e ${caminho}\\n\\n` +\n                `üîó \u003ca href\u003d\"${link}\"\u003eClique aqui para ver no Google Drive\u003c/a\u003e`;\n\n  const mensagemLinkId \u003d enviarMensagemTelegram(texto, THREAD_ID_APROVACAO_INTERNA);\n\n  criarEnqueteInterna(mensagemLinkId, cliente, nome, link, caminho, tipo, editor, dataFormatada, tipoArquivo);\n}\n"},{"id":"50f05985-563d-4a29-aa60-d44ec4eaf2fb","name":"monitoramento","type":"server_js","source":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// MONITORAMENTO E LEMBRETES\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunction criarEnqueteInterna(mensagemLinkId, cliente, nomeVideo, link, caminho, tipo, editor, dataFormatada, tipoArquivo) {\n  const url \u003d `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendPoll`;\n\n  const pergunta \u003d `Aprova este v√≠deo internamente?\\n\\n${cliente} | ${nomeVideo}`;\n\n  const payload \u003d {\n    chat_id: TELEGRAM_CHAT_ID,\n    message_thread_id: THREAD_ID_APROVACAO_INTERNA,\n    question: pergunta,\n    options: JSON.stringify([\"‚úÖ Aprovado\", \"‚úèÔ∏è Precisa de ajustes\"]),\n    is_anonymous: false,\n    allows_multiple_answers: false, // resposta √∫nica\n    reply_to_message_id: mensagemLinkId\n  };\n\n  const options \u003d {\n    method: \"post\",\n    contentType: \"application/json\",\n    payload: JSON.stringify(payload),\n    muteHttpExceptions: true\n  };\n\n  const response \u003d UrlFetchApp.fetch(url, options);\n  const data \u003d JSON.parse(response.getContentText());\n\n  if (data.ok) {\n    salvarControleAprovacao(data.result.poll.id, mensagemLinkId, cliente, nomeVideo, new Date(), tipoArquivo);\n\n    enviarMensagemTelegram(`‚è≥ Aguardando aprova√ß√£o...`, THREAD_ID_APROVACAO_INTERNA, data.result.message_id);\n  } else {\n    Logger.log(\"Erro ao criar enquete interna: \" + data.description);\n  }\n}\n\nfunction criarEnqueteCliente(mensagemClienteId, cliente, nomeVideo) {\n  const url \u003d `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendPoll`;\n\n  const pergunta \u003d `Cliente aprovou o v√≠deo?\\n\\n${cliente} | ${nomeVideo}`;\n\n  const payload \u003d {\n    chat_id: TELEGRAM_CHAT_ID,\n    message_thread_id: THREAD_ID_APROVACAO_CLIENTE,\n    question: pergunta,\n    options: JSON.stringify([\"‚úÖ Enviado e aprovado\", \"‚úèÔ∏è Ajustes necess√°rios\"]),\n    is_anonymous: false,\n    allows_multiple_answers: false, // resposta √∫nica\n    reply_to_message_id: mensagemClienteId\n  };\n\n  const options \u003d {\n    method: \"post\",\n    contentType: \"application/json\",\n    payload: JSON.stringify(payload),\n    muteHttpExceptions: true\n  };\n\n  UrlFetchApp.fetch(url, options);\n}\n\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// SALVAR CONTROLE DE APROVA√á√ÉO\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunction salvarControleAprovacao(pollId, mensagemLinkId, cliente, nomeVideo, dataEnvio, tipoArquivo) {\n  const planilha \u003d SpreadsheetApp.openById(PLANILHA_ID).getSheetByName(NOME_ABA);\n  planilha.appendRow([\n    pollId,\n    mensagemLinkId,\n    \"\", // mensagem_cliente_id (preenchido depois)\n    cliente,\n    nomeVideo,\n    Utilities.formatDate(dataEnvio, Session.getScriptTimeZone(), \"yyyy-MM-dd HH:mm:ss\"),\n    \"pendente\", // status inicial\n    \"\", // status do cliente\n    \"\", // reservado\n    tipoArquivo // \"aprovacao\" ou \"alteracao\"\n  ]);\n}\n"},{"id":"afb11684-bb05-4f8e-9cba-8355e58c8a60","name":"resetarPlanilhaControle","type":"server_js","source":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// SIMULA√á√ÉO R√ÅPIDA DE NOVO ARQUIVO DE TESTE\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunction simularNovoArquivoParaTeste() {\n  const clientes \u003d [\n    \"Carnes Araguaia\",\n    \"Bliss Motel\",\n    \"Grow\",\n    \"√ìticas Carol\",\n    \"Fabrika\",\n    \"Farmacia Meraki\"\n    // Adicione mais clientes aqui se quiser\n  ];\n\n  const clienteAleatorio \u003d clientes[Math.floor(Math.random() * clientes.length)];\n\n  const caminhoFake \u003d \"Meu Drive\\\\01. CLIENTES\\\\\" + clienteAleatorio + \"\\\\01. TR√ÅFEGO\\\\2025\\\\04.ABR\";\n\n  const arquivoFake \u003d {\n    getName: () \u003d\u003e \u0027[APR] Teste de Aprova√ß√£o.mp4\u0027,\n    getUrl: () \u003d\u003e \u0027https://drive.google.com/file/d/TESTE_ID/view\u0027,\n    getParents: () \u003d\u003e ({\n      next: () \u003d\u003e ({\n        getId: () \u003d\u003e \u0027SIMULADO_\u0027 + Math.random().toString(36).substring(2, 15)\n      })\n    }),\n    getDateCreated: () \u003d\u003e new Date(),\n    getLastUpdated: () \u003d\u003e new Date()\n  };\n\n  // Criar dinamicamente o caminho falso para o getFilePath simular\n  PropertiesService.getScriptProperties().setProperty(arquivoFake.getParents().next().getId(), caminhoFake);\n\n  iniciarFluxoAprovacao(arquivoFake, \"aprovacao\");\n}\n"},{"id":"fa75288e-2f30-4cbc-939c-05624c2e731e","name":"telegram","type":"server_js","source":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// COMUNICA√á√ÉO COM TELEGRAM\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunction enviarMensagemTelegram(mensagem, threadId, replyToMessageId) {\n  const url \u003d `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;\n\n  const payload \u003d {\n    chat_id: TELEGRAM_CHAT_ID,\n    message_thread_id: threadId,\n    text: mensagem,\n    parse_mode: \"HTML\",\n    disable_web_page_preview: false\n  };\n\n  if (replyToMessageId) {\n    payload.reply_to_message_id \u003d replyToMessageId;\n  }\n\n  const options \u003d {\n    method: \"post\",\n    contentType: \"application/json\",\n    payload: JSON.stringify(payload),\n    muteHttpExceptions: true\n  };\n\n  const response \u003d UrlFetchApp.fetch(url, options);\n  const data \u003d JSON.parse(response.getContentText());\n\n  if (data.ok) {\n    return data.result.message_id;\n  } else {\n    Logger.log(\"Erro ao enviar mensagem: \" + data.description);\n    return null;\n  }\n}\n\nfunction editarMensagemTelegram(messageId, novoTexto) {\n  const url \u003d `https://api.telegram.org/bot${TELEGRAM_TOKEN}/editMessageText`;\n\n  const payload \u003d {\n    chat_id: TELEGRAM_CHAT_ID,\n    message_id: messageId,\n    text: novoTexto,\n    parse_mode: \"HTML\",\n    disable_web_page_preview: false\n  };\n\n  const options \u003d {\n    method: \"post\",\n    contentType: \"application/json\",\n    payload: JSON.stringify(payload),\n    muteHttpExceptions: true\n  };\n\n  try {\n    UrlFetchApp.fetch(url, options);\n  } catch (e) {\n    Logger.log(\"Erro ao editar mensagem: \" + e.message);\n  }\n}\n\nfunction deletarMensagemTelegram(messageId) {\n  const url \u003d `https://api.telegram.org/bot${TELEGRAM_TOKEN}/deleteMessage`;\n\n  const payload \u003d {\n    chat_id: TELEGRAM_CHAT_ID,\n    message_id: messageId\n  };\n\n  const options \u003d {\n    method: \"post\",\n    contentType: \"application/json\",\n    payload: JSON.stringify(payload),\n    muteHttpExceptions: true\n  };\n\n  try {\n    UrlFetchApp.fetch(url, options);\n  } catch (e) {\n    Logger.log(\"Erro ao deletar mensagem: \" + e.message);\n  }\n}\n"},{"id":"6f1cd130-85ce-46b6-b356-e6c9c21ed4de","name":"salvarControleAprovacao","type":"server_js","source":"function salvarControleAprovacao(pollId, mensagemLinkId, cliente, nomeVideo, dataEnvio, tipoArquivo) {\n  const planilha \u003d SpreadsheetApp.openById(PLANILHA_ID).getSheetByName(NOME_ABA);\n  planilha.appendRow([\n    pollId,\n    mensagemLinkId,\n    \"\", // mensagem_cliente_id (vazio por enquanto)\n    cliente,\n    nomeVideo,\n    Utilities.formatDate(dataEnvio, Session.getScriptTimeZone(), \"yyyy-MM-dd HH:mm:ss\"),\n    \"pendente\", // status\n    \"\", // status_cliente\n    \"\", // reservado\n    tipoArquivo // aprova√ß√£o ou altera√ß√£o\n  ]);\n}\n"},{"id":"70147285-419b-4553-932c-b992b22c253f","name":"utils","type":"server_js","source":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n// FUN√á√ÉO PARA RESETAR A PLANILHA DE CONTROLE\n// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nfunction resetarControleAprovacao() {\n  const planilha \u003d SpreadsheetApp.openById(PLANILHA_ID).getSheetByName(NOME_ABA);\n  const ultimaLinha \u003d planilha.getLastRow();\n\n  if (ultimaLinha \u003e 1) {\n    planilha.getRange(2, 1, ultimaLinha - 1, planilha.getLastColumn()).clearContent();\n    Logger.log(\"Planilha Controle Aprova√ß√£o resetada com sucesso!\");\n  } else {\n    Logger.log(\"Nenhum dado para apagar. Planilha j√° est√° limpa.\");\n  }\n}\n\nfunction identificarEditor(cliente) {\n  const editores \u003d {\n    \"Barber Prime\": \"Guilherme\",\n    \"BCC - BRAS√çLIA COUNTRY CLUB\": \"Cau√£\",\n    \"Bliss Motel\": \"Davi\",\n    \"Capri\": \"Davi\",\n    \"Carnes Araguaia\": \"Davi\",\n    \"CCS - CENTRO CLINICO SAMAMBAIA\": \"Dash\",\n    \"CHB\": \"Davi\",\n    \"Distribuidora Araguaia\": \"Davi\",\n    \"Dra Ver√¥nica\": \"Davi\",\n    \"Eli√° SPA Sudoeste\": \"Cau√£\",\n    \"Fabrika\": \"Guilherme\",\n    \"Farmacia Meraki\": \"Guilherme\",\n    \"Fast Escova AL\": \"Dash\",\n    \"Fast Escova CE\": \"Dash\",\n    \"Fast Escova SA\": \"Dash\",\n    \"Gelo Mania\": \"Cau√£\",\n    \"Grow\": \"Cau√£\",\n    \"Hotel Ip√™\": \"N√£o definido\",\n    \"Hotel Positano\": \"N√£o definido\",\n    \"Life Est√©tica\": \"Dash\",\n    \"Magic Color\": \"Cau√£\",\n    \"Naturelo\": \"Dash\",\n    \"Nop‚Äôs Motel\": \"Dash\",\n    \"Nutriform\": \"Dash\",\n    \"√ìticas Carol\": \"Cau√£\",\n    \"Paddock Auto\": \"Dash\",\n    \"Prestacon Contabilidade\": \"Davi\",\n    \"Prestacon Projetos\": \"Dash\",\n    \"RP Solu√ß√µes Agro\": \"N√£o definido\",\n    \"Somms\": \"Davi\",\n    \"Te Levo\": \"Davi\"\n  };\n\n  cliente \u003d cliente.toLowerCase();\n\n  for (const chave in editores) {\n    if (cliente.includes(chave.toLowerCase())) {\n      return editores[chave];\n    }\n  }\n\n  return \"N√£o definido\";\n}\n\nfunction verificarEditor(clienteTeste) {\n  const editor \u003d identificarEditor(clienteTeste);\n  Logger.log(`Cliente informado: ${clienteTeste}`);\n  Logger.log(`Editor identificado: ${editor}`);\n}\n"}]}